{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/fetching-stat/FetchStat.ts","./src/app/components/fetching-stat/fetching-stat.component.ts","./src/app/components/fetching-stat/fetching-stat.component.html","./src/app/components/language-stat/language-stat.component.ts","./src/app/components/language-stat/language-stat.component.html","./src/app/components/level-stat/level-stat.component.ts","./src/app/components/level-stat/level-stat.component.html","./src/app/components/rating-graph/rating-graph.component.ts","./src/app/components/rating-graph/rating-graph.component.html","./src/app/components/rating-stat/rating-stat.component.ts","./src/app/components/rating-stat/rating-stat.component.html","./src/app/components/stat-table/stat-table.component.ts","./src/app/components/stat-table/stat-table.component.html","./src/app/components/tags-stat/tags-stat.component.ts","./src/app/components/tags-stat/tags-stat.component.html","./src/app/components/user-rating/user-rating.component.ts","./src/app/components/user-rating/user-rating.component.html","./src/app/components/verdicts-stat/verdicts-stat.component.ts","./src/app/components/verdicts-stat/verdicts-stat.component.html","./src/app/components/year-stat/year-stat.component.ts","./src/app/components/year-stat/year-stat.component.html","./src/app/model/models.ts","./src/app/modules/app-material.module.ts","./src/app/pages/main-page/main-page.component.ts","./src/app/pages/main-page/main-page.component.html","./src/app/pages/page-not-found/page-not-found.component.ts","./src/app/pages/page-not-found/page-not-found.component.html","./src/app/pages/report/report.component.ts","./src/app/pages/report/report.component.html","./src/app/pages/share-page/share-page.component.ts","./src/app/pages/share-page/share-page.component.html","./src/app/services/codeforces-api.service.ts","./src/app/services/codeforces-static.service.ts","./src/app/utils/utils.ts","./src/app/utils/year2startend.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { ReportComponent } from './pages/report/report.component';\nimport { MainPageComponent } from './pages/main-page/main-page.component';\nimport { SharePageComponent } from './pages/share-page/share-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainPageComponent,\n    children: [{ path: 'annual', component: ReportComponent }],\n  },\n  { path: 'share', component: SharePageComponent },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'cf-plus';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, isDevMode } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppMaterialModule } from './modules/app-material.module';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { ReportComponent } from './pages/report/report.component';\nimport { RatingGraphComponent } from './components/rating-graph/rating-graph.component';\nimport { UserRatingComponent } from './components/user-rating/user-rating.component';\nimport { VerdictsStatComponent } from './components/verdicts-stat/verdicts-stat.component';\nimport { LanguageStatComponent } from './components/language-stat/language-stat.component';\nimport { TagsStatComponent } from './components/tags-stat/tags-stat.component';\nimport { LevelStatComponent } from './components/level-stat/level-stat.component';\nimport { RatingStatComponent } from './components/rating-stat/rating-stat.component';\nimport { StatTableComponent } from './components/stat-table/stat-table.component';\nimport { FetchingStatComponent } from './components/fetching-stat/fetching-stat.component';\nimport { MainPageComponent } from './pages/main-page/main-page.component';\nimport { SharePageComponent } from './pages/share-page/share-page.component';\nimport { YearStatComponent } from './components/year-stat/year-stat.component';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\n// Import the echarts core module, which provides the necessary interfaces for using echarts.\nimport * as echarts from 'echarts/core';\n// Import bar charts, all with Chart suffix\nimport { BarChart, LineChart, PieChart } from 'echarts/charts';\nimport {\n  TitleComponent,\n  TooltipComponent,\n  GridComponent,\n  VisualMapComponent,\n  LegendComponent,\n} from 'echarts/components';\n// Import the Canvas renderer, note that introducing the CanvasRenderer or SVGRenderer is a required step\nimport { CanvasRenderer } from 'echarts/renderers';\n// import 'echarts/theme/macarons.js';\n\n// https://github.com/xieziyu/ngx-echarts#treeshaking-custom-build\n// https://echarts.apache.org/en/cheat-sheet.html\necharts.use([\n  TitleComponent,\n  TooltipComponent,\n  LegendComponent,\n  GridComponent,\n  VisualMapComponent,\n  BarChart,\n  PieChart,\n  LineChart,\n  CanvasRenderer,\n]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    ReportComponent,\n    RatingGraphComponent,\n    UserRatingComponent,\n    VerdictsStatComponent,\n    LanguageStatComponent,\n    TagsStatComponent,\n    LevelStatComponent,\n    RatingStatComponent,\n    StatTableComponent,\n    FetchingStatComponent,\n    MainPageComponent,\n    SharePageComponent,\n    YearStatComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxEchartsModule.forRoot({ echarts }),\n    AppMaterialModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000',\n    }),\n  ],\n  exports: [],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export enum FetchStat {\n  Before,\n  Fetching,\n  Success,\n  Failed\n}\n","import { Component, Input } from '@angular/core';\nimport { FetchStat } from './FetchStat';\n\n@Component({\n  selector: 'app-fetching-stat',\n  templateUrl: './fetching-stat.component.html',\n  styleUrls: ['./fetching-stat.component.less'],\n})\nexport class FetchingStatComponent {\n  FetchStat = FetchStat;\n  @Input('stat') stat!: FetchStat;\n  @Input('text') text!: string;\n}\n","<div *ngIf=\"stat != FetchStat.Before\">\n  {{ text }}\n  <span *ngIf=\"stat == FetchStat.Fetching\" style=\"display: inline-block\"\n    ><mat-spinner diameter=\"20\"></mat-spinner\n  ></span>\n  <mat-icon\n    *ngIf=\"stat == FetchStat.Failed\"\n    aria-hidden=\"false\"\n    aria-label=\"success\"\n    fontIcon=\"close\"\n    class=\"red-icon\"\n  >\n  </mat-icon>\n  <mat-icon\n    *ngIf=\"stat == FetchStat.Success\"\n    aria-hidden=\"false\"\n    aria-label=\"success\"\n    fontIcon=\"check\"\n    class=\"green-icon\"\n  ></mat-icon>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { EChartsOption, ECharts, LegendComponentOption } from 'echarts';\nimport { combineLatest, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\ninterface LanguageMap {\n  programmingLanguage: string;\n}\n\n@Component({\n  selector: 'app-language-stat',\n  templateUrl: './language-stat.component.html',\n  styleUrls: ['./language-stat.component.less'],\n})\nexport class LanguageStatComponent implements OnInit, OnDestroy {\n  // track the page life\n  private destroyed$ = new Subject<void>();\n\n  userStatus$ = new Subject<LanguageMap[]>();\n  eChartInstance$ = new Subject<ECharts>();\n\n  chartOption: EChartsOption = {\n    title: {\n      text: 'Languages',\n      left: 'center',\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b} : {c} ({d}%)',\n    },\n    legend: {\n      type: 'scroll',\n      orient: 'vertical',\n      right: 10,\n      top: 20,\n      bottom: 20,\n      data: [],\n    },\n    series: [\n      {\n        name: 'language',\n        type: 'pie',\n        radius: '55%',\n        center: ['50%', '60%'],\n        data: [],\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)',\n          },\n        },\n      },\n    ],\n  };\n\n  @Input() set userStatusResult(result: LanguageMap[]) {\n    if (typeof result !== 'undefined') {\n      this.userStatus$.next(result);\n    }\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {\n    combineLatest([this.userStatus$, this.eChartInstance$])\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(([result, eChartIns]) => {\n        this.updateLanguageGraph(result, eChartIns);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  onChartInit(ec): void {\n    this.eChartInstance$.next(ec);\n  }\n\n  updateLanguageGraph(result: LanguageMap[], eChartIns: ECharts): void {\n    // if (result.length === 0) {\n    //   return;\n    // }\n    const languages: { [key: string]: number } = {};\n    for (const item of Object.values(result)) {\n      if (typeof languages[item.programmingLanguage] === 'undefined') {\n        languages[item.programmingLanguage] = 0;\n      }\n      languages[item.programmingLanguage]++;\n    }\n    const languagesDataList: { name: string; value: number }[] = [];\n    for (const [name, value] of Object.entries(languages)) {\n      languagesDataList.push({ name, value });\n    }\n    languagesDataList.sort((v0, v1) => v1.value - v0.value);\n    const chartOption: EChartsOption = this.chartOption;\n    (chartOption.legend as LegendComponentOption).data = languagesDataList.map(\n      (v) => v.name\n    );\n    chartOption.series[0].data = languagesDataList;\n\n    eChartIns.setOption(chartOption as any); // TODO\n  }\n}\n","<div echarts [options]=\"chartOption\" (chartInit)=\"onChartInit($event)\" class=\"demo-chart\"></div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { combineLatest, Subject } from 'rxjs';\nimport { ECharts, EChartsOption, SeriesOption } from 'echarts';\nimport { takeUntil } from 'rxjs/operators';\n\ninterface LevelsMap {\n  verdict: string;\n  problem: {\n    contestId: string;\n    index: string;\n  };\n}\n\n@Component({\n  selector: 'app-level-stat',\n  templateUrl: './level-stat.component.html',\n  styleUrls: ['./level-stat.component.less'],\n})\nexport class LevelStatComponent implements OnInit, OnDestroy {\n  // track the page life\n  private destroyed$ = new Subject<void>();\n\n  levelsMapArrOb$ = new Subject<LevelsMap[]>();\n  eChartInstance$ = new Subject<ECharts>();\n\n  chartOption: EChartsOption = {\n    title: {\n      text: 'Levels(Div1, Div2 and Div3 mixed)',\n      left: 'center',\n    },\n    color: ['#3398DB'],\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\n      },\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true,\n    },\n    xAxis: [\n      {\n        type: 'category',\n        data: [],\n        axisTick: {\n          alignWithLabel: true,\n        },\n      },\n    ],\n    yAxis: [\n      {\n        type: 'value',\n      },\n    ],\n    series: [\n      {\n        name: 'solved',\n        type: 'bar',\n        barWidth: '60%',\n        data: [],\n      },\n    ],\n  };\n\n  @Input() set userStatusResult(result: LevelsMap[]) {\n    if (typeof result !== 'undefined') {\n      this.levelsMapArrOb$.next(result);\n    }\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {\n    combineLatest([this.levelsMapArrOb$, this.eChartInstance$])\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(([result, eChartIns]) => {\n        this.updateLevelGraph(result, eChartIns);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  onChartInit(eChartsIns: ECharts): void {\n    this.eChartInstance$.next(eChartsIns);\n  }\n\n  updateLevelGraph(result: LevelsMap[], eChartsIns: ECharts): void {\n    // if (result.length === 0) {\n    //   return;\n    // }\n    // [problem id] = {};\n    const problems: { [key: string]: { failed: number; solved: number } } = {};\n    result.forEach((item) => {\n      const problemId = `${item.problem.contestId}-${item.problem.index}`;\n      if (typeof problems[problemId] === 'undefined') {\n        // first submission of a problem\n        problems[problemId] = {\n          failed: 0,\n          solved: 0, // We also want to save how many submission got AC, a better name would have been number_of_ac\n        };\n      }\n    });\n    const solvedLevels: { [key: string]: number } = {};\n    result.forEach((item) => {\n      const problemId = `${item.problem.contestId}-${item.problem.index}`;\n      if (item.verdict === 'OK') {\n        problems[problemId].solved++;\n        if (problems[problemId].solved === 1) {\n          // some thing like D1 D2\n          const pIdx = item.problem.index[0];\n          if (typeof solvedLevels[pIdx] === 'undefined') {\n            solvedLevels[pIdx] = 0;\n          }\n          solvedLevels[pIdx]++;\n        }\n      }\n    });\n\n    const solvedDataList: { name: string; value: number }[] = [];\n    for (const [name, value] of Object.entries(solvedLevels)) {\n      solvedDataList.push({ name, value });\n    }\n    solvedDataList.sort((v0, v1) => (v1.name > v0.name ? -1 : 1));\n    const chartOption: EChartsOption = this.chartOption;\n    chartOption.xAxis[0].data = solvedDataList.map((v) => v.name);\n    (chartOption.series as SeriesOption[])[0].data = solvedDataList.map(\n      (v) => v.value\n    );\n\n    eChartsIns.setOption(chartOption as any); // TODO\n  }\n}\n","<div echarts [options]=\"chartOption\" (chartInit)=\"onChartInit($event)\" class=\"demo-chart\"></div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { EChartsOption, ECharts, SeriesOption } from 'echarts';\nimport { combineLatest, of, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { CfUserRatingItem } from 'src/app/model/CfUserRatingItem';\nimport { CodeforcesStaticService } from 'src/app/services/codeforces-static.service';\n\nconst COLORS = CodeforcesStaticService.getColors();\n\n@Component({\n  selector: 'app-rating-graph',\n  templateUrl: './rating-graph.component.html',\n  styleUrls: ['./rating-graph.component.less'],\n})\nexport class RatingGraphComponent implements OnInit, OnDestroy {\n  // track the page life\n  private destroyed$ = new Subject<void>();\n\n  ratingGraphResult$ = new Subject<CfUserRatingItem[]>();\n  eChartInstance$ = new Subject<ECharts>();\n\n  chartOption: EChartsOption = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross',\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: [],\n    },\n    yAxis: {\n      type: 'value',\n      scale: true,\n    },\n    series: [\n      {\n        data: [],\n        type: 'line',\n      },\n    ],\n  };\n\n  @Input() set userRatingList(value: CfUserRatingItem[]) {\n    if (typeof value !== 'undefined') {\n      this.ratingGraphResult$.next(value);\n    }\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {\n    const vMap = {\n      top: 10,\n      right: 10,\n      pieces: [],\n    };\n    COLORS.forEach((v) => {\n      vMap.pieces.push({\n        gt: v.scoreLow,\n        lte: v.scoreHigh,\n        color: v.color,\n      });\n    });\n    this.chartOption.visualMap = [vMap];\n\n    combineLatest([this.ratingGraphResult$, this.eChartInstance$])\n      .pipe(\n        takeUntil(this.destroyed$),\n        switchMap(([result, eChartIns]) =>\n          of(this.updateRatingGraph(result, eChartIns))\n        )\n      )\n      .subscribe(\n        ({ ins, options }: { ins: ECharts; options: EChartsOption }) => {\n          ins.setOption(options);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  onChartInit(eChartsIns): void {\n    this.eChartInstance$.next(eChartsIns);\n  }\n\n  updateRatingGraph(\n    result: CfUserRatingItem[],\n    eChartsIns: ECharts\n  ): { ins: ECharts; options: EChartsOption } {\n    const chartOption: EChartsOption = this.chartOption;\n    const xAxisData = [];\n    result.forEach((value, index) => {\n      return xAxisData.push(index);\n    });\n    (chartOption.xAxis as any).data = xAxisData; // TODO fix\n\n    const seriesData: number[] = [];\n    result.forEach((v) => {\n      seriesData.push(v.newRating);\n    });\n    (chartOption.series as SeriesOption[])[0].data = seriesData;\n    return { ins: eChartsIns, options: chartOption };\n  }\n}\n","<div echarts [options]=\"chartOption\" (chartInit)=\"onChartInit($event)\" class=\"demo-chart\"></div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { combineLatest, Subject } from 'rxjs';\nimport { ECharts, EChartsOption, SeriesOption } from 'echarts';\nimport { takeUntil } from 'rxjs/operators';\n\ninterface RatingMap {\n  verdict: string;\n  problem: {\n    contestId: string;\n    rating: string;\n    index: string;\n  };\n}\n\n@Component({\n  selector: 'app-rating-stat',\n  templateUrl: './rating-stat.component.html',\n  styleUrls: ['./rating-stat.component.less'],\n})\nexport class RatingStatComponent implements OnInit, OnDestroy {\n  // track the page life\n  private destroyed$ = new Subject<void>();\n\n  levelsMapArrOb$ = new Subject<RatingMap[]>();\n  eChartInstance$ = new Subject<ECharts>();\n\n  chartOption: EChartsOption = {\n    title: {\n      text: 'Ratings',\n      left: 'center',\n    },\n    color: ['#3398DB'],\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\n      },\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true,\n    },\n    xAxis: [\n      {\n        type: 'category',\n        data: [],\n        axisTick: {\n          alignWithLabel: true,\n        },\n      },\n    ],\n    yAxis: [\n      {\n        type: 'value',\n      },\n    ],\n    series: [\n      {\n        name: 'solved',\n        type: 'bar',\n        barWidth: '60%',\n        data: [],\n      },\n    ],\n  };\n\n  @Input() set userStatusResult(result: RatingMap[]) {\n    if (typeof result !== 'undefined') {\n      this.levelsMapArrOb$.next(result);\n    }\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {\n    combineLatest([this.levelsMapArrOb$, this.eChartInstance$])\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(([result, eChartIns]) => {\n        this.updateRatingGraph(result, eChartIns);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  onChartInit(eChartsIns: ECharts): void {\n    this.eChartInstance$.next(eChartsIns);\n  }\n\n  updateRatingGraph(result: RatingMap[], eChartsIns: ECharts): void {\n    // if (result.length === 0) {\n    //   return;\n    // }\n    // [problem id] = {};\n    const problems: { [key: string]: { failed: number; solved: number } } = {};\n    result.forEach((item) => {\n      const problemId = `${item.problem.contestId}-${item.problem.index}`;\n      if (typeof problems[problemId] === 'undefined') {\n        // first submission of a problem\n        problems[problemId] = {\n          failed: 0,\n          solved: 0, // We also want to save how many submission got AC, a better name would have been number_of_ac\n        };\n      }\n    });\n    const solvedRating: { [key: string]: number } = {};\n    result.forEach((item) => {\n      const problemId = `${item.problem.contestId}-${item.problem.index}`;\n      if (item.verdict === 'OK') {\n        problems[problemId].solved++;\n        if (problems[problemId].solved === 1) {\n          // some thing like D1 D2\n          const pIdx = item.problem.rating;\n          if (typeof pIdx === 'undefined') {\n            return;\n          }\n          if (typeof solvedRating[pIdx] === 'undefined') {\n            solvedRating[pIdx] = 0;\n          }\n          solvedRating[pIdx]++;\n        }\n      }\n    });\n\n    const solvedDataList: { name: string; value: number }[] = [];\n    for (const [name, value] of Object.entries(solvedRating)) {\n      solvedDataList.push({ name, value });\n    }\n    solvedDataList.sort((v0, v1) =>\n      Number(v1.name) > Number(v0.name) ? -1 : 1\n    );\n    const chartOption: EChartsOption = this.chartOption;\n    chartOption.xAxis[0].data = solvedDataList.map((v) => v.name);\n    (chartOption.series as SeriesOption[])[0].data = solvedDataList.map(\n      (v) => v.value\n    );\n\n    eChartsIns.setOption(chartOption as any); // TODO\n  }\n}\n","<div echarts [options]=\"chartOption\" (chartInit)=\"onChartInit($event)\" class=\"demo-chart\"></div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { Submission } from 'src/app/model/Submission';\n\n@Component({\n  selector: 'app-stat-table',\n  templateUrl: './stat-table.component.html',\n  styleUrls: ['./stat-table.component.less'],\n})\nexport class StatTableComponent implements OnInit, OnDestroy {\n  displayedColumns: string[] = ['name', 'value'];\n  dataSource: { name: string; value: string }[] = [];\n  unsolved: { name: string; url: string }[] = [];\n\n  // track the page life\n  private destroyed$ = new Subject<void>();\n\n  userStatusMapArrOb$ = new Subject<Submission[]>();\n\n  @Input() set userStatusResult(result: Submission[]) {\n    if (typeof result !== 'undefined') {\n      this.userStatusMapArrOb$.next(result);\n    }\n  }\n\n  ngOnInit(): void {\n    this.userStatusMapArrOb$\n      .pipe(\n        takeUntil(this.destroyed$),\n        tap((result) => this.updateView(result))\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  updateView(result: Submission[]): void {\n    // if (result.length === 0) {\n    //   return;\n    // }\n    const problems: {\n      [key: string]: { failed: number; solved: number; attempts: number };\n    } = {};\n    result.forEach((item) => {\n      const problemId = `${item.problem.contestId}-${item.problem.index}`;\n      if (typeof problems[problemId] === 'undefined') {\n        // first submission of a problem\n        problems[problemId] = {\n          attempts: 0,\n          failed: 0,\n          solved: 0, // We also want to save how many submission got AC, a better name would have been number_of_ac\n        };\n      }\n    });\n    const solvedTags: { [key: string]: number } = {};\n    const failedTags: { [key: string]: number } = {};\n    result.forEach((item) => {\n      // don't change order\n      const problemId = `${item.problem.contestId}-${item.problem.index}`;\n      if (item.verdict === 'OK') {\n        problems[problemId].solved++;\n        problems[problemId].attempts = 1; // in time reverse order so attempts = 0\n        if (problems[problemId].solved === 1) {\n          item.problem.tags.forEach((tag) => {\n            if (typeof solvedTags[tag] === 'undefined') {\n              solvedTags[tag] = 0;\n            }\n            solvedTags[tag]++;\n          });\n        }\n      } else {\n        problems[problemId].failed++;\n        problems[problemId].attempts++; // in time reverse order so attempts++\n        if (problems[problemId].failed === 1) {\n          item.problem.tags.forEach((tag) => {\n            if (typeof failedTags[tag] === 'undefined') {\n              failedTags[tag] = 0;\n            }\n            failedTags[tag]++;\n          });\n        }\n      }\n    });\n\n    const solvedDataList: { name: string; value: number }[] = [];\n    for (const [name, value] of Object.entries(solvedTags)) {\n      solvedDataList.push({ name, value });\n    }\n    solvedDataList.sort((v0, v1) => v1.value - v0.value);\n\n    // Number of contests\t101\n    // Best rank\t23 (1155)\n    // Worst rank\t6359 (1316)\n    // Max up\t1423 (839)\n    // Max down\t-173 (1316)\n\n    // console.log('data source:', this.dataSource);\n\n    let tried = 0; // count of distinct problems\n    let solved = 0;\n    let totalAttempt = 0;\n    let maxAttempt = 0; // before ac + 1 || count of submit\n    let maxAttemptProblem = '';\n    let maxAc = 0;\n    let maxAcProblem = '';\n    let solvedWithOneSub = 0;\n    this.unsolved = [];\n    for (const [p, item] of Object.entries(problems)) {\n      tried++;\n      if (item.solved > 0) {\n        solved++;\n        totalAttempt += item.attempts;\n      }\n      if (item.solved === 0) {\n        const [contestId, pId] = p.split('-');\n        this.unsolved.push({\n          name: p,\n          url: `https://codeforces.com/contest/${contestId}/problem/${pId}`,\n        });\n      }\n      if (item.attempts > maxAttempt) {\n        maxAttempt = item.attempts;\n        maxAttemptProblem = p;\n      }\n\n      if (item.solved > maxAc) {\n        maxAc = item.solved;\n        maxAcProblem = p;\n      }\n\n      if (item.solved > 0 && item.attempts === 1) {\n        solvedWithOneSub++;\n      }\n    }\n    this.dataSource = [];\n    if (result.length > 0) {\n      this.dataSource.push({ name: 'Tried', value: `${tried}` });\n      this.dataSource.push({ name: 'Solved', value: `${solved}` });\n      this.dataSource.push({\n        name: 'Average attempts(AC)',\n        value: (totalAttempt / solved).toFixed(2),\n      });\n      this.dataSource.push({\n        name: 'Max attempts',\n        value: `${maxAttempt}(${maxAttemptProblem})`,\n      });\n      if (solved) {\n        this.dataSource = this.dataSource.concat({\n          name: 'Solved with one submission',\n          value: `${solvedWithOneSub}(${(\n            (solvedWithOneSub / solved) *\n            100\n          ).toFixed(2)}%)`,\n        });\n      }\n    }\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Some numbers about</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n  </ng-container>\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"value\">\n    <th mat-header-cell *matHeaderCellDef>Count</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.value }}</td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n<mat-card>\n  <h1 style=\"padding-left: 10px\">Unsolved problems</h1>\n  <mat-chip-listbox aria-label=\"submitted but unsolved\" style=\"padding: 10px;\">\n    <mat-chip-option *ngFor=\"let item of unsolved\">\n      <a [href]=\"item.url\">\n        {{ item.name }}\n      </a>\n    </mat-chip-option>\n  </mat-chip-listbox>\n</mat-card>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  EChartsOption,\n  ECharts,\n  SeriesOption,\n  LegendComponentOption,\n} from 'echarts';\nimport { combineLatest, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\ninterface TagsMap {\n  verdict: string;\n  problem: {\n    contestId: string;\n    index: string;\n    tags: string[];\n  };\n}\n\n@Component({\n  selector: 'app-tags-stat',\n  templateUrl: './tags-stat.component.html',\n  styleUrls: ['./tags-stat.component.less'],\n})\nexport class TagsStatComponent implements OnInit, OnDestroy {\n  // track the page life\n  private destroyed$ = new Subject<void>();\n\n  tagsMapArrOb$ = new Subject<TagsMap[]>();\n  eChartInstance$ = new Subject<ECharts>();\n\n  chartOption: EChartsOption = {\n    title: {\n      text: 'Tags (Only Accept)',\n      left: 'center',\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b} : {c} ({d}%)',\n    },\n    legend: {\n      type: 'scroll',\n      orient: 'vertical',\n      right: 10,\n      top: 20,\n      bottom: 20,\n      data: [],\n    },\n    series: [\n      {\n        name: 'tags',\n        type: 'pie',\n        radius: '55%',\n        center: ['50%', '60%'],\n        data: [],\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)',\n          },\n        },\n      },\n    ],\n  };\n\n  @Input() set userStatusResult(result: TagsMap[]) {\n    if (typeof result !== 'undefined') {\n      this.tagsMapArrOb$.next(result);\n    }\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {\n    combineLatest([this.tagsMapArrOb$, this.eChartInstance$])\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(([result, eChartIns]) => {\n        this.updateVerdictGraph(result, eChartIns);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  onChartInit(eChartsIns: ECharts): void {\n    this.eChartInstance$.next(eChartsIns);\n  }\n\n  updateVerdictGraph(result: TagsMap[], eChartsIns: ECharts): void {\n    // if (result.length === 0) {\n    //   return;\n    // }\n    const problems: { [key: string]: { failed: number; solved: number } } = {};\n    result.forEach((item) => {\n      const problemId = `${item.problem.contestId}-${item.problem.index}`;\n      if (typeof problems[problemId] === 'undefined') {\n        // first submission of a problem\n        problems[problemId] = {\n          failed: 0,\n          solved: 0, // We also want to save how many submission got AC, a better name would have been number_of_ac\n        };\n      }\n    });\n    const solvedTags: { [key: string]: number } = {};\n    const failedTags: { [key: string]: number } = {};\n    result.forEach((item) => {\n      const problemId = `${item.problem.contestId}-${item.problem.index}`;\n      if (item.verdict === 'OK') {\n        problems[problemId].solved++;\n        if (problems[problemId].solved === 1) {\n          item.problem.tags.forEach((tag) => {\n            if (typeof solvedTags[tag] === 'undefined') {\n              solvedTags[tag] = 0;\n            }\n            solvedTags[tag]++;\n          });\n        }\n      } else {\n        problems[problemId].failed++;\n        if (problems[problemId].failed === 1) {\n          item.problem.tags.forEach((tag) => {\n            if (typeof failedTags[tag] === 'undefined') {\n              failedTags[tag] = 0;\n            }\n            failedTags[tag]++;\n          });\n        }\n      }\n    });\n\n    const solvedDataList: { name: string; value: number }[] = [];\n    for (const [name, value] of Object.entries(solvedTags)) {\n      solvedDataList.push({ name, value });\n    }\n    solvedDataList.sort((v0, v1) => v1.value - v0.value);\n    const chartOption: EChartsOption = this.chartOption;\n    (chartOption.legend as LegendComponentOption).data = solvedDataList.map(\n      (v) => v.name\n    );\n    (chartOption.series as SeriesOption[])[0].data = solvedDataList;\n    // TODO failed pie chart\n\n    eChartsIns.setOption(chartOption as any); // TODO\n  }\n}\n","<div echarts [options]=\"chartOption\" (chartInit)=\"onChartInit($event)\" class=\"demo-chart\"></div>\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CfUserRatingItem } from 'src/app/model/CfUserRatingItem';\nimport { CodeforcesStaticService } from 'src/app/services/codeforces-static.service';\n\n@Component({\n  selector: 'app-user-rating',\n  templateUrl: './user-rating.component.html',\n  styleUrls: ['./user-rating.component.css'],\n})\nexport class UserRatingComponent {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  dataSource$: MatTableDataSource<CfUserRatingItem>;\n  displayedColumns = [\n    'contestId',\n    'contestName',\n    /* 'handle',*/\n    'newRating',\n    /* 'oldRating',*/\n    'rank',\n    'ratingUpdateTimeSeconds',\n  ];\n\n  private userRatingListPrivate: CfUserRatingItem[] = [];\n\n  @Input() set userRatingList(value: CfUserRatingItem[]) {\n    // console.log('userRatingList' + value.length);\n    this.userRatingListPrivate = value;\n    this.dataSource$ = new MatTableDataSource(value);\n    this.dataSource$.paginator = this.paginator;\n  }\n\n  get userRatingList(): CfUserRatingItem[] {\n    return this.userRatingListPrivate;\n  }\n\n  calcColor(r: number): string {\n    const COLORS = CodeforcesStaticService.getColors();\n    for (const i in COLORS) {\n      if (r < COLORS[i].scoreHigh) {\n        return COLORS[i].color;\n      }\n    }\n    return '#000000';\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource$\" aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"contestId\">\n      <th mat-header-cell *matHeaderCellDef>contestId</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.contestId }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"contestName\">\n      <th mat-header-cell *matHeaderCellDef>contestName</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.contestName }}</td>\n    </ng-container>\n\n    <!-- handle Column -->\n    <ng-container matColumnDef=\"handle\">\n      <th mat-header-cell *matHeaderCellDef>handle</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.handle }}</td>\n    </ng-container>\n\n    <!-- newRating Column -->\n    <ng-container matColumnDef=\"newRating\">\n      <th mat-header-cell *matHeaderCellDef>newRating</th>\n      <td\n        mat-cell\n        *matCellDef=\"let row\"\n        [style.color]=\"calcColor(row.newRating)\"\n      >\n        {{ row.newRating }}\n      </td>\n    </ng-container>\n\n    <!-- oldRating Column -->\n    <ng-container matColumnDef=\"oldRating\">\n      <th mat-header-cell *matHeaderCellDef>oldRating</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.oldRating }}</td>\n    </ng-container>\n\n    <!-- rank Column -->\n    <ng-container matColumnDef=\"rank\">\n      <th mat-header-cell *matHeaderCellDef>rank</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.rank }}</td>\n    </ng-container>\n\n    <!-- ratingUpdateTimeSeconds Column -->\n    <ng-container matColumnDef=\"ratingUpdateTimeSeconds\">\n      <th mat-header-cell *matHeaderCellDef>Date</th>\n      <td mat-cell *matCellDef=\"let row\">\n        {{\n          row.ratingUpdateTimeSeconds * 1000 | date : \"y/M/d HH:mm\" : \"+0800\"\n        }}\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator\n    [pageSizeOptions]=\"[5, 10, 20, 50, 100]\"\n    showFirstLastButtons\n    aria-label=\"Select page of periodic elements\"\n  >\n  </mat-paginator>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  EChartsOption,\n  ECharts,\n  LegendComponentOption,\n  SeriesOption,\n} from 'echarts';\nimport { combineLatest, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\ninterface VerdictMap {\n  verdict: string;\n}\n\n@Component({\n  selector: 'app-verdicts-stat',\n  templateUrl: './verdicts-stat.component.html',\n  styleUrls: ['./verdicts-stat.component.less'],\n})\nexport class VerdictsStatComponent implements OnInit, OnDestroy {\n  // track the page life\n  private destroyed$ = new Subject<void>();\n\n  userStatus$ = new Subject<VerdictMap[]>();\n  eChartInstance$ = new Subject<ECharts>();\n\n  chartOption: EChartsOption = {\n    title: {\n      text: 'Verdicts',\n      left: 'center',\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b} : {c} ({d}%)',\n    },\n    legend: {\n      type: 'scroll',\n      orient: 'vertical',\n      right: 10,\n      top: 20,\n      bottom: 20,\n      data: [],\n    },\n    series: [\n      {\n        name: 'verdicts',\n        type: 'pie',\n        radius: '55%',\n        center: ['50%', '60%'],\n        data: [],\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)',\n          },\n        },\n      },\n    ],\n  };\n\n  @Input() set userStatusResult(result: VerdictMap[]) {\n    if (typeof result !== 'undefined') {\n      this.userStatus$.next(result);\n    }\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {\n    combineLatest([this.userStatus$, this.eChartInstance$])\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(([result, eChartIns]) => {\n        this.updateVerdictGraph(result, eChartIns);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  onChartInit(ec): void {\n    this.eChartInstance$.next(ec);\n  }\n\n  updateVerdictGraph(result: VerdictMap[], eChartIns: ECharts): void {\n    // if (result.length === 0) {\n    //   return;\n    // }\n    const verdicts: { [key: string]: number } = {};\n    for (const item of Object.values(result)) {\n      if (typeof verdicts[item.verdict] === 'undefined') {\n        verdicts[item.verdict] = 0;\n      }\n      verdicts[item.verdict]++;\n    }\n    const verdictsDataList: { name: string; value: number }[] = [];\n    for (const [name, value] of Object.entries(verdicts)) {\n      verdictsDataList.push({ name, value });\n    }\n    verdictsDataList.sort((v0, v1) => v1.value - v0.value);\n    const chartOption: EChartsOption = this.chartOption;\n    (chartOption.legend as LegendComponentOption).data = verdictsDataList.map(\n      (v) => v.name\n    );\n    (chartOption.series as SeriesOption[])[0].data = verdictsDataList;\n\n    eChartIns.setOption(chartOption as any); // TODO\n  }\n}\n","<div echarts [options]=\"chartOption\" (chartInit)=\"onChartInit($event)\" class=\"demo-chart\"></div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Date2GR, YearData } from 'src/app/model/models';\nimport { Submission } from 'src/app/model/Submission';\nimport { intDiv, nextDayNumber, timestamp2number } from 'src/app/utils/utils';\n\n@Component({\n  selector: 'app-year-stat',\n  templateUrl: './year-stat.component.html',\n  styleUrls: ['./year-stat.component.less'],\n})\nexport class YearStatComponent implements OnInit {\n  userData$: ReplaySubject<Submission[]> = new ReplaySubject(1);\n  yearsResult: YearData[] = [];\n\n  @Input() set userStatusResult(result: Submission[]) {\n    if (typeof result !== 'undefined') {\n      this.userData$.next(result);\n    }\n  }\n\n  ngOnInit(): void {\n    this.userData$\n      .pipe(\n        tap((data: Submission[]) => {\n          // console.log(`years result called len = ${data.length}`);\n          // collect as map\n          const d2ggMap: Map<number, Date2GR> = new Map(null);\n          if (data.length === 0) {\n            return [];\n          }\n          const todayDate = timestamp2number(new Date().getTime()); // TODO\n          let minDate = todayDate;\n          let maxDate = 19700101;\n          data.forEach((raw) => {\n            if (typeof raw.creationTimeSeconds === 'undefined') {\n              return;\n            }\n            const key = timestamp2number(raw.creationTimeSeconds * 1000);\n            const record = d2ggMap.has(key)\n              ? d2ggMap.get(key)\n              : new Date2GR(key);\n            d2ggMap.set(key, record.addResult(raw.verdict));\n            minDate = Math.min(minDate, key);\n            maxDate = Math.max(maxDate, key);\n          });\n\n          // 开始年的一月一日\n          minDate = intDiv(minDate, 10000) * 10000 + 101; // 19xx0101\n          maxDate = intDiv(maxDate, 10000) * 10000 + 1231; // 19xx1231\n          let year = 1970;\n          let yd = new YearData(1970);\n          const ret: YearData[] = [];\n          for (let i = minDate; i <= maxDate; i = nextDayNumber(i)) {\n            const pushData = d2ggMap.has(i) ? d2ggMap.get(i) : new Date2GR(i);\n            if (intDiv(pushData.day, 10000) !== year) {\n              if (yd.weekList.length !== 0) {\n                ret.push(yd);\n              }\n              year = intDiv(pushData.day, 10000);\n              yd = new YearData(year);\n            }\n            yd.add(pushData);\n          }\n          if (yd.weekList.length !== 0) {\n            ret.push(yd);\n          }\n          this.yearsResult = ret;\n        })\n      )\n      .subscribe();\n  }\n}\n","<section class=\"statistics-container\">\n  <div class=\"statistics-main\">\n    <div class=\"ui-box\">\n      <div class=\"ui-year\" *ngFor=\"let item of yearsResult\">\n        <h4>{{ item.year }}</h4>\n        <div class=\"ui-year-data\">\n          <div *ngFor=\"let week of item.weekList\" class=\"ui-week\">\n            <div *ngFor=\"let v of week\" class=\"ui-day\">\n              <div\n                class=\"ui-square bggrey\"\n                *ngIf=\"v.green + v.red === 0\"\n                [ngClass]=\"['year' + item.year, 'month' + v.month]\"\n              ></div>\n              <div class=\"ui-square\" *ngIf=\"v.green + v.red !== 0\">\n                <div\n                  class=\"ui-square-sub bggreen\"\n                  [ngStyle]=\"{ flex: v.green }\"\n                ></div>\n                <div\n                  class=\"ui-square-gsub bgred\"\n                  [ngStyle]=\"{ flex: v.red }\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { intDiv } from '../utils/utils';\n\nexport class Date2GR {\n  public day: number;\n  public green: number;\n  public red: number;\n  public year: number;\n  public month: number;\n  public date: number;\n\n  // date to green red\n  // 20xx0101\n  constructor(day: number) {\n    this.day = day;\n    this.year = intDiv(day, 10000);\n    this.month = intDiv(day, 100) % 100;\n    this.date = day % 100;\n    this.green = 0;\n    this.red = 0;\n  }\n\n  addResult(val): Date2GR {\n    if (val === 'OK') {\n      this.green++;\n    } else {\n      this.red++;\n    }\n    return this;\n  }\n}\n\nexport class YearData {\n  public year: number;\n  public weekList: Date2GR[][];\n\n  constructor(year) {\n    this.year = year;\n    this.weekList = [];\n  }\n\n  add(data: Date2GR): void {\n    if (\n      this.weekList.length == 0 ||\n      this.weekList[this.weekList.length - 1].length == 7\n    ) {\n      this.weekList.push([]);\n    }\n    this.weekList[this.weekList.length - 1].push(data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CdkMenuModule } from '@angular/cdk/menu';\nimport { DialogModule } from '@angular/cdk/dialog';\n\n@NgModule({\n  exports: [\n    // A11yModule,\n    // CdkAccordionModule,\n    // ClipboardModule,\n    // CdkMenuModule,\n    // CdkStepperModule,\n    // CdkTableModule,\n    // CdkTreeModule,\n    // DragDropModule,\n    // MatAutocompleteModule,\n    // MatBadgeModule,\n    // MatBottomSheetModule,\n    MatButtonModule,\n    // MatButtonToggleModule,\n    MatCardModule,\n    // MatCheckboxModule,\n    MatChipsModule,\n    // MatStepperModule,\n    // MatDatepickerModule,\n    // MatDialogModule,\n    // MatDividerModule,\n    // MatExpansionModule,\n    // MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    // MatListModule,\n    // MatMenuModule,\n    // MatNativeDateModule,\n    MatPaginatorModule,\n    // MatProgressBarModule,\n    // MatProgressSpinnerModule,\n    // MatRadioModule,\n    // MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    // MatSliderModule,\n    // MatSlideToggleModule,\n    // MatSnackBarModule,\n    // MatSortModule,\n    MatTableModule,\n    // MatTabsModule,\n    MatToolbarModule,\n    // MatTooltipModule,\n    // MatTreeModule,\n    // OverlayModule,\n    // PortalModule,\n    // ScrollingModule,\n    // DialogModule,\n  ],\n})\nexport class AppMaterialModule {}\n","import { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.less'],\n})\nexport class MainPageComponent {\n  constructor() {\n    window['consoleCheck'] = environment.consoleCheck;\n  }\n}\n","<div class=\"page-container\">\n  <mat-toolbar color=\"primary\">\n    <button\n      mat-icon-button\n      class=\"example-icon\"\n      aria-label=\"menu icon\"\n      (click)=\"drawer.toggle()\"\n    >\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>Codeforces +</span>\n    <span class=\"example-spacer\"></span>\n  </mat-toolbar>\n  <mat-drawer-container class=\"example-container\" [hasBackdrop]=\"true\">\n    <mat-drawer #drawer mode=\"cover\">\n      <div class=\"example-button-row\">\n        <button mat-flat-button routerLink=\"/annual\">Annual Report</button>\n        <!-- <button mat-flat-button routerLink=\"/share\">Share</button> -->\n      </div>\n    </mat-drawer>\n    <router-outlet></router-outlet>\n  </mat-drawer-container>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.less'],\n})\nexport class PageNotFoundComponent {\n  constructor() {}\n}\n","<div class=\"page-404\">\n  <h1>Page not found !</h1>\n  <button mat-flat-button routerLink=\"/annual\">Annual Report</button>\n  <button mat-flat-button routerLink=\"/annual\">Share Report</button>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { year2startend } from '../../utils/year2startend';\nimport { FetchStat } from '../../components/fetching-stat/FetchStat';\nimport { CodeforcesApiService } from 'src/app/services/codeforces-api.service';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.less'],\n})\nexport class ReportComponent implements OnInit, OnDestroy {\n  destroy$ = new Subject<void>();\n\n  yearControl: UntypedFormControl = new UntypedFormControl('valid', [\n    Validators.pattern(/^20\\d\\d$/),\n  ]);\n\n  FetchStat = FetchStat;\n\n  ratingFetching: FetchStat = FetchStat.Before;\n  statusFetching: FetchStat = FetchStat.Before;\n\n  userName = '';\n  queryUserName = '';\n\n  userRating = [];\n  userStatus = [];\n  yearList: string[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private codeforcesApiService: CodeforcesApiService\n  ) {\n    const curYear = new Date().getFullYear();\n    for (let i = curYear; i >= 2010; i--) {\n      this.yearList.push(`${i}`);\n    }\n  }\n\n  ngOnInit(): void {\n    const queryOb$ = new ReplaySubject<{\n      handle: string;\n      year: { start: number; end: number };\n    }>(1);\n    this.route.queryParams\n      .pipe(\n        takeUntil(this.destroy$),\n        tap(({ year }) => this.yearControl.setValue(year || '')),\n        // filter(({ handle }) => !!handle),\n        tap(({ handle }) => (this.userName = handle)),\n        map((r) => ({ handle: r.handle, year: year2startend(r.year) }))\n      )\n      .subscribe((r) => {\n        queryOb$.next(r);\n      });\n\n    // TODO how to merge into one with switchMap\n    queryOb$\n      .pipe(\n        tap(({ handle }) => (this.queryUserName = handle)),\n        switchMap(async ({ handle, year }) => {\n          this.userRating = [];\n          this.ratingFetching = FetchStat.Fetching;\n          return {\n            ret: await this.codeforcesApiService.getUserRating(handle),\n            year,\n          };\n        })\n      )\n      .subscribe(({ ret, year: { start, end } }) => {\n        this.ratingFetching = FetchStat.Success;\n        this.userRating = ret.result.filter(\n          (item) =>\n            item.ratingUpdateTimeSeconds * 1000 >= start &&\n            item.ratingUpdateTimeSeconds * 1000 <= end\n        );\n      });\n    queryOb$\n      .pipe(\n        switchMap(async ({ handle, year }) => {\n          this.userStatus = [];\n          this.statusFetching = FetchStat.Fetching;\n          return {\n            ret: await this.codeforcesApiService.getUserStatus(handle),\n            year,\n          };\n        })\n      )\n      .subscribe(({ ret, year: { start, end } }) => {\n        this.statusFetching = FetchStat.Success;\n        this.userStatus = ret.result.filter(\n          (item) =>\n            item.creationTimeSeconds * 1000 >= start &&\n            item.creationTimeSeconds * 1000 <= end\n        );\n      });\n  }\n\n  goButtonClick(): void {\n    this.router.navigate([], {\n      queryParams: {\n        handle: this.userName,\n        year: this.yearControl.value || undefined,\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"form-field\">\n  <mat-form-field>\n    <mat-label>Handle</mat-label>\n    <input matInput placeholder=\"Ex. Cro-Marmot\" [(ngModel)]=\"userName\" />\n    <button\n      *ngIf=\"userName\"\n      matSuffix\n      mat-icon-button\n      aria-label=\"Clear\"\n      (click)=\"userName = ''\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Year</mat-label>\n    <mat-select [formControl]=\"yearControl\">\n      <mat-option>All</mat-option>\n      <mat-option *ngFor=\"let y of yearList\" [value]=\"y\">{{ y }}</mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"yearControl.hasError('pattern')\">\n      Your selection is invalid\n    </mat-error>\n  </mat-form-field>\n  <button mat-raised-button (click)=\"goButtonClick()\">Go</button>\n</div>\n<div>\n  <div class=\"fetching-text\">\n    <app-fetching-stat\n      text=\"Fetching user rating:\"\n      [stat]=\"ratingFetching\"\n    ></app-fetching-stat>\n    <app-fetching-stat\n      text=\"Fetching user status:\"\n      [stat]=\"statusFetching\"\n    ></app-fetching-stat>\n  </div>\n  <app-rating-graph [userRatingList]=\"userRating\"></app-rating-graph>\n  <app-user-rating [userRatingList]=\"userRating\"></app-user-rating>\n  <app-verdicts-stat [userStatusResult]=\"userStatus\"></app-verdicts-stat>\n  <app-language-stat [userStatusResult]=\"userStatus\"></app-language-stat>\n  <app-tags-stat [userStatusResult]=\"userStatus\"></app-tags-stat>\n  <app-level-stat [userStatusResult]=\"userStatus\"></app-level-stat>\n  <app-rating-stat [userStatusResult]=\"userStatus\"></app-rating-stat>\n  <app-stat-table [userStatusResult]=\"userStatus\"></app-stat-table>\n  <app-year-stat [userStatusResult]=\"userStatus\"></app-year-stat>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-share-page',\n  templateUrl: './share-page.component.html',\n  styleUrls: ['./share-page.component.less']\n})\nexport class SharePageComponent {\n\n}\n","<p>share-page works!</p>\n","import { Injectable } from '@angular/core';\nimport { UserRatingResp, UserStatusResp } from '../model/response';\nimport { LSCacheTool } from '../utils/utils';\n// import UserStatus from './user.status.js';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CodeforcesApiService {\n  userStatusCache: LSCacheTool<UserStatusResp>;\n  userRatingCache: LSCacheTool<UserRatingResp>;\n\n  constructor() {\n    this.userStatusCache = new LSCacheTool<UserStatusResp>('user.status.');\n    this.userRatingCache = new LSCacheTool<UserRatingResp>('user.rating.');\n  }\n\n  getUserStatus(userName: string): Promise<UserStatusResp> {\n    if (!userName) {\n      return Promise.resolve({\n        status: 'OK',\n        result: [],\n      });\n    }\n    // https://codeforces.com/apiHelp/methods#user.status\n    return this.userStatusCache.Get(userName, () =>\n      fetch(`https://codeforces.com/api/user.status?handle=${userName}`).then(\n        (res) => res.json()\n      )\n    );\n  }\n\n  getUserRating(userName: string): Promise<UserRatingResp> {\n    if (!userName) {\n      return Promise.resolve({\n        status: 'OK',\n        result: [],\n      });\n    }\n    return this.userRatingCache.Get(userName, () =>\n      fetch(`https://codeforces.com/api/user.rating?handle=${userName}`).then(\n        (res) => res.json()\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nclass CFUrlConfig {\n  userRatingPrefix: string;\n  contestPrefix: string;\n}\n\nconst urlOnline: CFUrlConfig = {\n  userRatingPrefix: 'https://codeforces.com/api/user.rating?',\n  contestPrefix: 'https://codeforces.com/contest',\n};\n\nconst urlStatic: CFUrlConfig = {\n  userRatingPrefix: 'assets/staticdata/cf/user.rating.json',\n  contestPrefix: 'https://codeforces.com/contest',\n};\n\nclass ScoreColors {\n  scoreLow: number;\n  scoreHigh: number;\n  color: string;\n  name: string;\n}\n\nconst COLORS: ScoreColors[] = [\n  { scoreLow: 0, scoreHigh: 1200, color: '#cccccc', name: 'Newbie' },\n  { scoreLow: 1200, scoreHigh: 1400, color: '#70eb74', name: 'Pupil' },\n  { scoreLow: 1400, scoreHigh: 1600, color: '#76ddbb', name: 'Specialist' },\n  { scoreLow: 1600, scoreHigh: 1900, color: '#aaa9fc', name: 'Expert' },\n  { scoreLow: 1900, scoreHigh: 2100, color: '#ec84fc', name: 'Candidate Master' },\n  { scoreLow: 2100, scoreHigh: 2300, color: '#fecc88', name: 'Master' },\n  { scoreLow: 2300, scoreHigh: 2400, color: '#fcbb54', name: 'International Master' },\n  { scoreLow: 2400, scoreHigh: 2600, color: '#f47476', name: 'Grandmaster' },\n  { scoreLow: 2600, scoreHigh: 3000, color: '#f24533', name: 'International Grandmaster' },\n  { scoreLow: 3000, scoreHigh: 4000, color: '#ab2e16', name: 'Legendary grandmaster' },\n];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CodeforcesStaticService {\n  constructor() {}\n\n  public static getUrl(): CFUrlConfig {\n    return urlOnline;\n  }\n\n  public static getColors(): ScoreColors[] {\n    return COLORS;\n  }\n}\n","export const intDiv = (val1: number, val2: number): number => {\n  if (val2 === 0) {\n    return NaN;\n  }\n  return (val1 - (val1 % val2)) / val2;\n};\nconst dateParse = (val): number[] => {\n  const d = new Date(val);\n  return [d.getFullYear(), d.getMonth() + 1, d.getDate()];\n};\nexport const timestamp2number = (val): number => {\n  const [y, m, d] = dateParse(val);\n  return y * 10000 + m * 100 + d;\n};\nexport const nextDayNumber = (val: number): number => {\n  const [y, m, d] = [\n    intDiv(val, 10000),\n    intDiv(val, 100) % 100,\n    (val % 100) + 1,\n  ];\n  const dt = new Date(y, m - 1, d);\n  return timestamp2number(dt.getTime());\n};\n\nexport class LSCacheTool<T> {\n  cachedData: Map<string, T> = null;\n  prefix: string;\n\n  // TODO on local storage change\n  constructor(localStoragePrefix: string) {\n    this.cachedData = new Map<string, T>();\n    this.prefix = localStoragePrefix;\n  }\n\n  async Get(key: string, fallBack: () => Promise<T>): Promise<T> { // TODO add force refech\n    if (this.cachedData.has(key)) {\n      return this.cachedData.get(key);\n    }\n    // check local storage\n    const now = Date.now();\n    const lskey = `${this.prefix}${key}`;\n    const jsondata = localStorage.getItem(lskey);\n    let timestamp = 0;\n    let result = null;\n    try {\n      const data = JSON.parse(jsondata);\n      if (data) {\n        timestamp = data.timestamp;\n        result = data.result;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    if (result && now - timestamp < 60 * 60 * 1000) { // TODO 1 day\n      // 1 hour\n      this.cachedData.set(key, result);\n      return result;\n    }\n    // use callback\n    result = await fallBack(); // may fail with exception\n    this.cachedData.set(key, result);\n    localStorage.setItem(\n      lskey,\n      JSON.stringify({\n        timestamp: now,\n        result,\n      })\n    );\n    return result;\n  }\n}\n","export function year2startend(year: string): { start: any; end: any } {\n  let start = 2000;\n  let end = new Date().getFullYear() + 1;\n  if (/^\\d{4}$/.test(year)) {\n    start = Number(year);\n    end = Number(year) + 1;\n  }\n  return {\n    start: new Date(`${Number(start)}-01-01`).getTime(),\n    end: new Date(`${Number(end)}-01-01`).getTime(),\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  consoleCheck: 'default',\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","PageNotFoundComponent","ReportComponent","MainPageComponent","SharePageComponent","routes","path","component","children","AppRoutingModule","forRoot","useHash","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","BrowserModule","isDevMode","ServiceWorkerModule","FormsModule","ReactiveFormsModule","CommonModule","BrowserAnimationsModule","AppMaterialModule","RatingGraphComponent","UserRatingComponent","VerdictsStatComponent","LanguageStatComponent","TagsStatComponent","LevelStatComponent","RatingStatComponent","StatTableComponent","FetchingStatComponent","YearStatComponent","NgxEchartsModule","echarts","BarChart","LineChart","PieChart","TitleComponent","TooltipComponent","GridComponent","VisualMapComponent","LegendComponent","CanvasRenderer","use","AppModule","bootstrap","register","enabled","registrationStrategy","declarations","FetchStat","inputs","stat","text","consts","combineLatest","Subject","takeUntil","title","left","tooltip","trigger","formatter","legend","type","orient","right","top","bottom","data","series","name","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","userStatusResult","result","userStatus$","next","ngOnInit","eChartInstance$","pipe","destroyed$","subscribe","eChartIns","updateLanguageGraph","ngOnDestroy","complete","onChartInit","ec","languages","item","Object","values","programmingLanguage","languagesDataList","value","entries","push","sort","v0","v1","chartOption","map","v","setOption","ctx","color","axisPointer","grid","containLabel","xAxis","axisTick","alignWithLabel","yAxis","barWidth","levelsMapArrOb$","updateLevelGraph","eChartsIns","problems","forEach","problemId","problem","contestId","index","failed","solved","solvedLevels","verdict","pIdx","solvedDataList","of","switchMap","CodeforcesStaticService","COLORS","getColors","scale","userRatingList","ratingGraphResult$","vMap","pieces","gt","scoreLow","lte","scoreHigh","visualMap","updateRatingGraph","ins","options","xAxisData","seriesData","newRating","solvedRating","rating","Number","tap","userStatusMapArrOb$","updateView","attempts","solvedTags","failedTags","tags","tag","tried","totalAttempt","maxAttempt","maxAttemptProblem","maxAc","maxAcProblem","solvedWithOneSub","unsolved","p","pId","split","url","dataSource","length","toFixed","concat","tagsMapArrOb$","updateVerdictGraph","MatPaginator","MatTableDataSource","userRatingListPrivate","dataSource$","paginator","calcColor","r","i","viewQuery","verdicts","verdictsDataList","ReplaySubject","Date2GR","YearData","intDiv","nextDayNumber","timestamp2number","userData$","d2ggMap","Map","todayDate","Date","getTime","minDate","maxDate","raw","creationTimeSeconds","key","record","has","get","set","addResult","Math","min","max","year","yd","ret","pushData","day","weekList","add","yearsResult","month","date","green","red","val","MatButtonModule","MatCardModule","MatChipsModule","MatIconModule","MatInputModule","MatPaginatorModule","MatSelectModule","MatSidenavModule","MatTableModule","MatToolbarModule","environment","window","consoleCheck","UntypedFormControl","Validators","year2startend","route","router","codeforcesApiService","pattern","Before","curYear","getFullYear","yearList","queryOb$","queryParams","destroy$","yearControl","setValue","handle","userName","queryUserName","userRating","ratingFetching","Fetching","getUserRating","start","end","Success","filter","ratingUpdateTimeSeconds","userStatus","statusFetching","getUserStatus","goButtonClick","navigate","undefined","LSCacheTool","CodeforcesApiService","userStatusCache","userRatingCache","Promise","resolve","status","Get","fetch","then","res","json","factory","providedIn","CFUrlConfig","urlOnline","userRatingPrefix","contestPrefix","urlStatic","ScoreColors","getUrl","val1","val2","NaN","dateParse","d","getMonth","getDate","y","m","dt","localStoragePrefix","cachedData","prefix","fallBack","now","lskey","jsondata","localStorage","getItem","timestamp","JSON","parse","e","console","error","setItem","stringify","test","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}